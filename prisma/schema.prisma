// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Lang {
  br
}

enum AccountRole {
  STUDENT
  PROFESSOR
}

model User {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  firstName     String
  lastName      String
  email         String      @unique
  tel           String?
  birth         String?
  cep           String?
  city          String?
  state         String?
  address       String?
  addressNumber String?
  district      String?
  complement    String?
  password      String
  profilePhoto  String?
  themes        String[]
  resume        String?
  accountType   AccountRole
  isCompleted   Boolean     @default(false)
  isConfirmed   Boolean     @default(false)

  requestIds String[]  @db.ObjectId
  requests   Request[] @relation(fields: [requestIds], references: [id])

  seenMessageIds String[]  @db.ObjectId
  seenMessages   Message[] @relation("Seen", fields: [seenMessageIds], references: [id])

  messages Message[]
}

model Request {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  subject     String
  description String

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  lastMessageAt DateTime @default(now())

  userIds String[] @db.ObjectId
  users   User[]   @relation(fields: [userIds], references: [id])

  messagesIds String[]  @db.ObjectId
  messages    Message[]
}

model Message {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  content String
  fileUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  seenIds String[] @db.ObjectId
  seen    User[]   @relation("Seen", fields: [seenIds], references: [id])

  requestId String  @db.ObjectId
  request   Request @relation(fields: [requestId], references: [id], onDelete: Cascade)

  senderId String @db.ObjectId
  sender   User   @relation(fields: [senderId], references: [id], onDelete: Cascade)
}

model Subject {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  main String
  lang Lang
  subs String[]
}
